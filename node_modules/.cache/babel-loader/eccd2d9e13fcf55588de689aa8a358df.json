{"ast":null,"code":"import{evaluate,sqrt}from\"mathjs\";var calculatorReducer=function calculatorReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"APPEND_NUM\":return state+action.char.toString();case\"APPEND_SYMBOL\":return state+\" \"+action.char+\" \";case\"BACKSPACE_NUM\":if(state.toString().endsWith(\" \")){return state.toString().slice(0,-3);}else{return state.toString().slice(0,-1);}case\"EQUALS\":try{var result=evaluate(state);if(!isNaN(result)){return evaluate(state);}else{return state;}}catch(_unused){return state;}case\"SQRT\":return sqrt(parseFloat(state));case\"CLEAR\":return\"\";case\"NEGATIVE\":try{var _result=evaluate(state);if(!isNaN){return _result*-1;}else{return state;}}catch(_unused2){return state;}default:return state;}};export default calculatorReducer;","map":{"version":3,"names":["evaluate","sqrt","calculatorReducer","state","action","type","char","toString","endsWith","slice","result","isNaN","parseFloat"],"sources":["/Users/joshwood/Workspace/react-playground/redux-calculator/src/reducers/calculatorReducer.js"],"sourcesContent":["import { evaluate, sqrt } from \"mathjs\";\n\nconst calculatorReducer = (state = \"\", action) => {\n    switch(action.type) {\n        case \"APPEND_NUM\":\n            return state + action.char.toString();\n        case \"APPEND_SYMBOL\":\n            return state + \" \" + action.char + \" \";\n        case \"BACKSPACE_NUM\":\n            if (state.toString().endsWith(\" \")) {\n                return state.toString().slice(0, -3);\n            }\n            else {\n                return state.toString().slice(0, -1);\n            }            \n        case \"EQUALS\":\n            try {\n                let result = evaluate(state);\n                if (!isNaN(result)) {\n                    return evaluate(state);\n                }\n                else {\n                    return state;\n                }\n            }\n            catch {\n                return state;\n            }\n        case \"SQRT\":\n            return sqrt(parseFloat(state));\n        case \"CLEAR\":\n            return \"\";\n        case \"NEGATIVE\":\n            try {\n                let result = evaluate(state);\n                if (!isNaN) {\n                    return result * -1;\n                }\n                else {\n                    return state;\n                }\n            }\n            catch {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\nexport default calculatorReducer;"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,IAAnB,KAA+B,QAA/B,CAEA,GAAMC,kBAAiB,CAAG,QAApBA,kBAAoB,EAAwB,IAAvBC,MAAuB,2DAAf,EAAe,IAAXC,OAAW,2CAC9C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,YAAL,CACI,MAAOF,MAAK,CAAGC,MAAM,CAACE,IAAP,CAAYC,QAAZ,EAAf,CACJ,IAAK,eAAL,CACI,MAAOJ,MAAK,CAAG,GAAR,CAAcC,MAAM,CAACE,IAArB,CAA4B,GAAnC,CACJ,IAAK,eAAL,CACI,GAAIH,KAAK,CAACI,QAAN,GAAiBC,QAAjB,CAA0B,GAA1B,CAAJ,CAAoC,CAChC,MAAOL,MAAK,CAACI,QAAN,GAAiBE,KAAjB,CAAuB,CAAvB,CAA0B,CAAC,CAA3B,CAAP,CACH,CAFD,IAGK,CACD,MAAON,MAAK,CAACI,QAAN,GAAiBE,KAAjB,CAAuB,CAAvB,CAA0B,CAAC,CAA3B,CAAP,CACH,CACL,IAAK,QAAL,CACI,GAAI,CACA,GAAIC,OAAM,CAAGV,QAAQ,CAACG,KAAD,CAArB,CACA,GAAI,CAACQ,KAAK,CAACD,MAAD,CAAV,CAAoB,CAChB,MAAOV,SAAQ,CAACG,KAAD,CAAf,CACH,CAFD,IAGK,CACD,MAAOA,MAAP,CACH,CACJ,CACD,cAAM,CACF,MAAOA,MAAP,CACH,CACL,IAAK,MAAL,CACI,MAAOF,KAAI,CAACW,UAAU,CAACT,KAAD,CAAX,CAAX,CACJ,IAAK,OAAL,CACI,MAAO,EAAP,CACJ,IAAK,UAAL,CACI,GAAI,CACA,GAAIO,QAAM,CAAGV,QAAQ,CAACG,KAAD,CAArB,CACA,GAAI,CAACQ,KAAL,CAAY,CACR,MAAOD,QAAM,CAAG,CAAC,CAAjB,CACH,CAFD,IAGK,CACD,MAAOP,MAAP,CACH,CACJ,CACD,eAAM,CACF,MAAOA,MAAP,CACH,CACL,QACI,MAAOA,MAAP,CA3CR,CA6CH,CA9CD,CA+CA,cAAeD,kBAAf"},"metadata":{},"sourceType":"module"}