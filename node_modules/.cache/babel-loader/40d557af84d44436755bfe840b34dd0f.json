{"ast":null,"code":"/**\r\n * Depth-first search and postorder of a tree rooted at node j\r\n *\r\n * @param {Number}  j               The tree node\r\n * @param {Number}  k\r\n * @param {Array}   w               The workspace array\r\n * @param {Number}  head            The index offset within the workspace for the head array\r\n * @param {Number}  next            The index offset within the workspace for the next array\r\n * @param {Array}   post            The post ordering array\r\n * @param {Number}  stack           The index offset within the workspace for the stack array\r\n *\r\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\r\n */\nexport function csTdfs(j, k, w, head, next, post, stack) {\n  // variables\n  var top = 0; // place j on the stack\n\n  w[stack] = j; // while (stack is not empty)\n\n  while (top >= 0) {\n    // p = top of stack\n    var p = w[stack + top]; // i = youngest child of p\n\n    var i = w[head + p];\n\n    if (i === -1) {\n      // p has no unordered children left\n      top--; // node p is the kth postordered node\n\n      post[k++] = p;\n    } else {\n      // remove i from children of p\n      w[head + p] = w[next + i]; // increment top\n\n      ++top; // start dfs on child node i\n\n      w[stack + top] = i;\n    }\n  }\n\n  return k;\n}","map":{"version":3,"names":["csTdfs","j","k","w","head","next","post","stack","top","p","i"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js"],"sourcesContent":["/**\r\n * Depth-first search and postorder of a tree rooted at node j\r\n *\r\n * @param {Number}  j               The tree node\r\n * @param {Number}  k\r\n * @param {Array}   w               The workspace array\r\n * @param {Number}  head            The index offset within the workspace for the head array\r\n * @param {Number}  next            The index offset within the workspace for the next array\r\n * @param {Array}   post            The post ordering array\r\n * @param {Number}  stack           The index offset within the workspace for the stack array\r\n *\r\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\r\n */\r\nexport function csTdfs(j, k, w, head, next, post, stack) {\r\n  // variables\r\n  var top = 0; // place j on the stack\r\n\r\n  w[stack] = j; // while (stack is not empty)\r\n\r\n  while (top >= 0) {\r\n    // p = top of stack\r\n    var p = w[stack + top]; // i = youngest child of p\r\n\r\n    var i = w[head + p];\r\n\r\n    if (i === -1) {\r\n      // p has no unordered children left\r\n      top--; // node p is the kth postordered node\r\n\r\n      post[k++] = p;\r\n    } else {\r\n      // remove i from children of p\r\n      w[head + p] = w[next + i]; // increment top\r\n\r\n      ++top; // start dfs on child node i\r\n\r\n      w[stack + top] = i;\r\n    }\r\n  }\r\n\r\n  return k;\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkD;EACvD;EACA,IAAIC,GAAG,GAAG,CAAV,CAFuD,CAE1C;;EAEbL,CAAC,CAACI,KAAD,CAAD,GAAWN,CAAX,CAJuD,CAIzC;;EAEd,OAAOO,GAAG,IAAI,CAAd,EAAiB;IACf;IACA,IAAIC,CAAC,GAAGN,CAAC,CAACI,KAAK,GAAGC,GAAT,CAAT,CAFe,CAES;;IAExB,IAAIE,CAAC,GAAGP,CAAC,CAACC,IAAI,GAAGK,CAAR,CAAT;;IAEA,IAAIC,CAAC,KAAK,CAAC,CAAX,EAAc;MACZ;MACAF,GAAG,GAFS,CAEL;;MAEPF,IAAI,CAACJ,CAAC,EAAF,CAAJ,GAAYO,CAAZ;IACD,CALD,MAKO;MACL;MACAN,CAAC,CAACC,IAAI,GAAGK,CAAR,CAAD,GAAcN,CAAC,CAACE,IAAI,GAAGK,CAAR,CAAf,CAFK,CAEsB;;MAE3B,EAAEF,GAAF,CAJK,CAIE;;MAEPL,CAAC,CAACI,KAAK,GAAGC,GAAT,CAAD,GAAiBE,CAAjB;IACD;EACF;;EAED,OAAOR,CAAP;AACD"},"metadata":{},"sourceType":"module"}