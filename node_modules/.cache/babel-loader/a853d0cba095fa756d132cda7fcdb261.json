{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createRow } from '../../function/matrix/row.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { isNumber } from '../../utils/is.js';\nvar name = 'row';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\n/**\r\n * Attach a transform function to matrix.column\r\n * Adds a property transform containing the transform function.\r\n *\r\n * This transform changed the last `index` parameter of function column\r\n * from zero-based to one-based\r\n */\n\nexport var createRowTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Index = _ref.Index,\n      matrix = _ref.matrix,\n      range = _ref.range;\n  var row = createRow({\n    typed: typed,\n    Index: Index,\n    matrix: matrix,\n    range: range\n  }); // @see: comment of row itself\n\n  return typed('row', {\n    '...any': function any(args) {\n      // change last argument from zero-based to one-based\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if (isNumber(last)) {\n        args[lastIndex] = last - 1;\n      }\n\n      try {\n        return row.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","createRow","errorTransform","isNumber","name","dependencies","createRowTransform","_ref","typed","Index","matrix","range","row","any","args","lastIndex","length","last","apply","err","isTransformFunction"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/expression/transform/row.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { createRow } from '../../function/matrix/row.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { isNumber } from '../../utils/is.js';\r\nvar name = 'row';\r\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\r\n/**\r\n * Attach a transform function to matrix.column\r\n * Adds a property transform containing the transform function.\r\n *\r\n * This transform changed the last `index` parameter of function column\r\n * from zero-based to one-based\r\n */\r\n\r\nexport var createRowTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    Index,\r\n    matrix,\r\n    range\r\n  } = _ref;\r\n  var row = createRow({\r\n    typed,\r\n    Index,\r\n    matrix,\r\n    range\r\n  }); // @see: comment of row itself\r\n\r\n  return typed('row', {\r\n    '...any': function any(args) {\r\n      // change last argument from zero-based to one-based\r\n      var lastIndex = args.length - 1;\r\n      var last = args[lastIndex];\r\n\r\n      if (isNumber(last)) {\r\n        args[lastIndex] = last - 1;\r\n      }\r\n\r\n      try {\r\n        return row.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,OAA7B,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACjF,IACEC,KADF,GAKID,IALJ,CACEC,KADF;EAAA,IAEEC,KAFF,GAKIF,IALJ,CAEEE,KAFF;EAAA,IAGEC,MAHF,GAKIH,IALJ,CAGEG,MAHF;EAAA,IAIEC,KAJF,GAKIJ,IALJ,CAIEI,KAJF;EAMA,IAAIC,GAAG,GAAGX,SAAS,CAAC;IAClBO,KAAK,EAALA,KADkB;IAElBC,KAAK,EAALA,KAFkB;IAGlBC,MAAM,EAANA,MAHkB;IAIlBC,KAAK,EAALA;EAJkB,CAAD,CAAnB,CAPiF,CAY7E;;EAEJ,OAAOH,KAAK,CAAC,KAAD,EAAQ;IAClB,UAAU,SAASK,GAAT,CAAaC,IAAb,EAAmB;MAC3B;MACA,IAAIC,SAAS,GAAGD,IAAI,CAACE,MAAL,GAAc,CAA9B;MACA,IAAIC,IAAI,GAAGH,IAAI,CAACC,SAAD,CAAf;;MAEA,IAAIZ,QAAQ,CAACc,IAAD,CAAZ,EAAoB;QAClBH,IAAI,CAACC,SAAD,CAAJ,GAAkBE,IAAI,GAAG,CAAzB;MACD;;MAED,IAAI;QACF,OAAOL,GAAG,CAACM,KAAJ,CAAU,IAAV,EAAgBJ,IAAhB,CAAP;MACD,CAFD,CAEE,OAAOK,GAAP,EAAY;QACZ,MAAMjB,cAAc,CAACiB,GAAD,CAApB;MACD;IACF;EAfiB,CAAR,CAAZ;AAiBD,CA/BqD,EA+BnD;EACDC,mBAAmB,EAAE;AADpB,CA/BmD,CAA/C"},"metadata":{},"sourceType":"module"}