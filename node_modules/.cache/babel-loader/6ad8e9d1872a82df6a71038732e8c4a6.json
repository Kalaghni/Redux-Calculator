{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nvar name = 'sin';\nvar dependencies = ['typed'];\nexport var createSin = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\r\n   * Calculate the sine of a value.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.sin(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.sin(2)                      // returns number 0.9092974268256813\r\n   *    math.sin(math.pi / 4)            // returns number 0.7071067811865475\r\n   *    math.sin(math.unit(90, 'deg'))   // returns number 1\r\n   *    math.sin(math.unit(30, 'deg'))   // returns number 0.5\r\n   *\r\n   *    const angle = 0.2\r\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1\r\n   *\r\n   * See also:\r\n   *\r\n   *    cos, tan\r\n   *\r\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\r\n   * @return {number | BigNumber | Complex | Array | Matrix} Sine of x\r\n   */\n\n  return typed(name, {\n    number: Math.sin,\n    Complex: function Complex(x) {\n      return x.sin();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.sin();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sin is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sin(0) = 0\n      return deepMap(x, this, true);\n    }\n  });\n});","map":{"version":3,"names":["factory","deepMap","name","dependencies","createSin","_ref","typed","number","Math","sin","Complex","x","BigNumber","Unit","hasBase","constructor","BASE_UNITS","ANGLE","TypeError","value","ArrayMatrix"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/function/trigonometry/sin.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { deepMap } from '../../utils/collection.js';\r\nvar name = 'sin';\r\nvar dependencies = ['typed'];\r\nexport var createSin = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Calculate the sine of a value.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.sin(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.sin(2)                      // returns number 0.9092974268256813\r\n   *    math.sin(math.pi / 4)            // returns number 0.7071067811865475\r\n   *    math.sin(math.unit(90, 'deg'))   // returns number 1\r\n   *    math.sin(math.unit(30, 'deg'))   // returns number 0.5\r\n   *\r\n   *    const angle = 0.2\r\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1\r\n   *\r\n   * See also:\r\n   *\r\n   *    cos, tan\r\n   *\r\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\r\n   * @return {number | BigNumber | Complex | Array | Matrix} Sine of x\r\n   */\r\n  return typed(name, {\r\n    number: Math.sin,\r\n    Complex: function Complex(x) {\r\n      return x.sin();\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return x.sin();\r\n    },\r\n    Unit: function Unit(x) {\r\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError('Unit in function sin is no angle');\r\n      }\r\n\r\n      return this(x.value);\r\n    },\r\n    'Array | Matrix': function ArrayMatrix(x) {\r\n      // deep map collection, skip zeros since sin(0) = 0\r\n      return deepMap(x, this, true);\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,SAAS,GAAG,eAAeJ,OAAO,CAACE,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACxE,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOA,KAAK,CAACJ,IAAD,EAAO;IACjBK,MAAM,EAAEC,IAAI,CAACC,GADI;IAEjBC,OAAO,EAAE,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;MAC3B,OAAOA,CAAC,CAACF,GAAF,EAAP;IACD,CAJgB;IAKjBG,SAAS,EAAE,SAASA,SAAT,CAAmBD,CAAnB,EAAsB;MAC/B,OAAOA,CAAC,CAACF,GAAF,EAAP;IACD,CAPgB;IAQjBI,IAAI,EAAE,SAASA,IAAT,CAAcF,CAAd,EAAiB;MACrB,IAAI,CAACA,CAAC,CAACG,OAAF,CAAUH,CAAC,CAACI,WAAF,CAAcC,UAAd,CAAyBC,KAAnC,CAAL,EAAgD;QAC9C,MAAM,IAAIC,SAAJ,CAAc,kCAAd,CAAN;MACD;;MAED,OAAO,KAAKP,CAAC,CAACQ,KAAP,CAAP;IACD,CAdgB;IAejB,kBAAkB,SAASC,WAAT,CAAqBT,CAArB,EAAwB;MACxC;MACA,OAAOV,OAAO,CAACU,CAAD,EAAI,IAAJ,EAAU,IAAV,CAAd;IACD;EAlBgB,CAAP,CAAZ;AAoBD,CAnD4C,CAAtC"},"metadata":{},"sourceType":"module"}