{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMean } from '../../function/statistics/mean.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'mean';\nvar dependencies = ['typed', 'add', 'divide'];\nexport var createMeanTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      add = _ref.add,\n      divide = _ref.divide;\n  var mean = createMean({\n    typed: typed,\n    add: add,\n    divide: divide\n  });\n  /**\r\n   * Attach a transform function to math.mean\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform changed the last `dim` parameter of function mean\r\n   * from one-based to zero based\r\n   */\n\n  return typed('mean', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return mean.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createMean","lastDimToZeroBase","name","dependencies","createMeanTransform","_ref","typed","add","divide","mean","any","args","apply","err","isTransformFunction"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/expression/transform/mean.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { createMean } from '../../function/statistics/mean.js';\r\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\r\nvar name = 'mean';\r\nvar dependencies = ['typed', 'add', 'divide'];\r\nexport var createMeanTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    add,\r\n    divide\r\n  } = _ref;\r\n  var mean = createMean({\r\n    typed,\r\n    add,\r\n    divide\r\n  });\r\n  /**\r\n   * Attach a transform function to math.mean\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform changed the last `dim` parameter of function mean\r\n   * from one-based to zero based\r\n   */\r\n\r\n  return typed('mean', {\r\n    '...any': function any(args) {\r\n      args = lastDimToZeroBase(args);\r\n\r\n      try {\r\n        return mean.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,CAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EAClF,IACEC,KADF,GAIID,IAJJ,CACEC,KADF;EAAA,IAEEC,GAFF,GAIIF,IAJJ,CAEEE,GAFF;EAAA,IAGEC,MAHF,GAIIH,IAJJ,CAGEG,MAHF;EAKA,IAAIC,IAAI,GAAGT,UAAU,CAAC;IACpBM,KAAK,EAALA,KADoB;IAEpBC,GAAG,EAAHA,GAFoB;IAGpBC,MAAM,EAANA;EAHoB,CAAD,CAArB;EAKA;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAOF,KAAK,CAAC,MAAD,EAAS;IACnB,UAAU,SAASI,GAAT,CAAaC,IAAb,EAAmB;MAC3BA,IAAI,GAAGV,iBAAiB,CAACU,IAAD,CAAxB;;MAEA,IAAI;QACF,OAAOF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAAP;MACD,CAFD,CAEE,OAAOE,GAAP,EAAY;QACZ,MAAMd,cAAc,CAACc,GAAD,CAApB;MACD;IACF;EATkB,CAAT,CAAZ;AAWD,CA9BsD,EA8BpD;EACDC,mBAAmB,EAAE;AADpB,CA9BoD,CAAhD"},"metadata":{},"sourceType":"module"}