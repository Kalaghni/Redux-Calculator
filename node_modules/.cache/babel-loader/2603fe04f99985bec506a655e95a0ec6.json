{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { cubeNumber } from '../../plain/number/index.js';\nvar name = 'cube';\nvar dependencies = ['typed'];\nexport var createCube = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\r\n   * Compute the cube of a value, `x * x * x`.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.cube(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.cube(2)            // returns number 8\r\n   *    math.pow(2, 3)          // returns number 8\r\n   *    math.cube(4)            // returns number 64\r\n   *    4 * 4 * 4               // returns number 64\r\n   *\r\n   *    math.cube([1, 2, 3, 4]) // returns Array [1, 8, 27, 64]\r\n   *\r\n   * See also:\r\n   *\r\n   *    multiply, square, pow, cbrt\r\n   *\r\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x  Number for which to calculate the cube\r\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} Cube of x\r\n   */\n\n  return typed(name, {\n    number: cubeNumber,\n    Complex: function Complex(x) {\n      return x.mul(x).mul(x); // Is faster than pow(x, 3)\n    },\n    BigNumber: function BigNumber(x) {\n      return x.times(x).times(x);\n    },\n    Fraction: function Fraction(x) {\n      return x.pow(3); // Is faster than mul()mul()mul()\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since cube(0) = 0\n      return deepMap(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.pow(3);\n    }\n  });\n});","map":{"version":3,"names":["factory","deepMap","cubeNumber","name","dependencies","createCube","_ref","typed","number","Complex","x","mul","BigNumber","times","Fraction","pow","ArrayMatrix","Unit"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/function/arithmetic/cube.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { deepMap } from '../../utils/collection.js';\r\nimport { cubeNumber } from '../../plain/number/index.js';\r\nvar name = 'cube';\r\nvar dependencies = ['typed'];\r\nexport var createCube = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Compute the cube of a value, `x * x * x`.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.cube(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.cube(2)            // returns number 8\r\n   *    math.pow(2, 3)          // returns number 8\r\n   *    math.cube(4)            // returns number 64\r\n   *    4 * 4 * 4               // returns number 64\r\n   *\r\n   *    math.cube([1, 2, 3, 4]) // returns Array [1, 8, 27, 64]\r\n   *\r\n   * See also:\r\n   *\r\n   *    multiply, square, pow, cbrt\r\n   *\r\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x  Number for which to calculate the cube\r\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} Cube of x\r\n   */\r\n  return typed(name, {\r\n    number: cubeNumber,\r\n    Complex: function Complex(x) {\r\n      return x.mul(x).mul(x); // Is faster than pow(x, 3)\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return x.times(x).times(x);\r\n    },\r\n    Fraction: function Fraction(x) {\r\n      return x.pow(3); // Is faster than mul()mul()mul()\r\n    },\r\n    'Array | Matrix': function ArrayMatrix(x) {\r\n      // deep map collection, skip zeros since cube(0) = 0\r\n      return deepMap(x, this, true);\r\n    },\r\n    Unit: function Unit(x) {\r\n      return x.pow(3);\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,UAAU,GAAG,eAAeL,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACzE,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOA,KAAK,CAACJ,IAAD,EAAO;IACjBK,MAAM,EAAEN,UADS;IAEjBO,OAAO,EAAE,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;MAC3B,OAAOA,CAAC,CAACC,GAAF,CAAMD,CAAN,EAASC,GAAT,CAAaD,CAAb,CAAP,CAD2B,CACH;IACzB,CAJgB;IAKjBE,SAAS,EAAE,SAASA,SAAT,CAAmBF,CAAnB,EAAsB;MAC/B,OAAOA,CAAC,CAACG,KAAF,CAAQH,CAAR,EAAWG,KAAX,CAAiBH,CAAjB,CAAP;IACD,CAPgB;IAQjBI,QAAQ,EAAE,SAASA,QAAT,CAAkBJ,CAAlB,EAAqB;MAC7B,OAAOA,CAAC,CAACK,GAAF,CAAM,CAAN,CAAP,CAD6B,CACZ;IAClB,CAVgB;IAWjB,kBAAkB,SAASC,WAAT,CAAqBN,CAArB,EAAwB;MACxC;MACA,OAAOT,OAAO,CAACS,CAAD,EAAI,IAAJ,EAAU,IAAV,CAAd;IACD,CAdgB;IAejBO,IAAI,EAAE,SAASA,IAAT,CAAcP,CAAd,EAAiB;MACrB,OAAOA,CAAC,CAACK,GAAF,CAAM,CAAN,CAAP;IACD;EAjBgB,CAAP,CAAZ;AAmBD,CAhD6C,CAAvC"},"metadata":{},"sourceType":"module"}