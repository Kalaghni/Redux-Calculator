{"ast":null,"code":"import { isBigNumber } from './is.js';\n/**\r\n * Clone an object\r\n *\r\n *     clone(x)\r\n *\r\n * Can clone any primitive type, array, and object.\r\n * If x has a function clone, this function will be invoked to clone the object.\r\n *\r\n * @param {*} x\r\n * @return {*} clone\r\n */\n\nexport function clone(x) {\n  var type = typeof x; // immutable primitive types\n\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  } // use clone function of the object when available\n\n\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  } // array\n\n\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf());\n  if (isBigNumber(x)) return x; // bignumbers are immutable\n\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n  // object\n\n  return mapObject(x, clone);\n}\n/**\r\n * Apply map to all properties of an object\r\n * @param {Object} object\r\n * @param {function} callback\r\n * @return {Object} Returns a copy of the object with mapped properties\r\n */\n\nexport function mapObject(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n/**\r\n * Extend object a with the properties of object b\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {Object} a\r\n */\n\nexport function extend(a, b) {\n  for (var prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n\n  return a;\n}\n/**\r\n * Deep extend an object a with the properties of object b\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @returns {Object}\r\n */\n\nexport function deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    // We check against prop not being in Object.prototype or Function.prototype\n    // to prevent polluting for example Object.__proto__.\n    if (hasOwnProperty(b, prop) && !(prop in Object.prototype) && !(prop in Function.prototype)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n\n  return a;\n}\n/**\r\n * Deep test equality of all fields in two pairs of arrays or objects.\r\n * Compares values and functions strictly (ie. 2 is not the same as '2').\r\n * @param {Array | Object} a\r\n * @param {Array | Object} b\r\n * @returns {boolean}\r\n */\n\nexport function deepStrictEqual(a, b) {\n  var prop, i, len;\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (typeof a === 'function') {\n    return a === b;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a)) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return a === b;\n  }\n}\n/**\r\n * Recursively flatten a nested object.\r\n * @param {Object} nestedObject\r\n * @return {Object} Returns the flattened object\r\n */\n\nexport function deepFlatten(nestedObject) {\n  var flattenedObject = {};\n\n  _deepFlatten(nestedObject, flattenedObject);\n\n  return flattenedObject;\n} // helper function used by deepFlatten\n\nfunction _deepFlatten(nestedObject, flattenedObject) {\n  for (var prop in nestedObject) {\n    if (hasOwnProperty(nestedObject, prop)) {\n      var value = nestedObject[prop];\n\n      if (typeof value === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject);\n      } else {\n        flattenedObject[prop] = value;\n      }\n    }\n  }\n}\n/**\r\n * Test whether the current JavaScript engine supports Object.defineProperty\r\n * @returns {boolean} returns true if supported\r\n */\n\n\nexport function canDefineProperty() {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {\n          return null;\n        }\n      });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n}\n/**\r\n * Attach a lazy loading property to a constant.\r\n * The given function `fn` is called once when the property is first requested.\r\n *\r\n * @param {Object} object         Object where to add the property\r\n * @param {string} prop           Property name\r\n * @param {Function} valueResolver Function returning the property value. Called\r\n *                                without arguments.\r\n */\n\nexport function lazy(object, prop, valueResolver) {\n  var _uninitialized = true;\n\n  var _value;\n\n  Object.defineProperty(object, prop, {\n    get: function get() {\n      if (_uninitialized) {\n        _value = valueResolver();\n        _uninitialized = false;\n      }\n\n      return _value;\n    },\n    set: function set(value) {\n      _value = value;\n      _uninitialized = false;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n/**\r\n * Traverse a path into an object.\r\n * When a namespace is missing, it will be created\r\n * @param {Object} object\r\n * @param {string | string[]} path   A dot separated string like 'name.space'\r\n * @return {Object} Returns the object at the end of the path\r\n */\n\nexport function traverse(object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'));\n  }\n\n  var obj = object;\n\n  if (path) {\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n\n      if (!(key in obj)) {\n        obj[key] = {};\n      }\n\n      obj = obj[key];\n    }\n  }\n\n  return obj;\n}\n/**\r\n * A safe hasOwnProperty\r\n * @param {Object} object\r\n * @param {string} property\r\n */\n\nexport function hasOwnProperty(object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n/**\r\n * Test whether an object is a factory. a factory has fields:\r\n *\r\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\r\n * - name: string (optional)\r\n * - path: string    A dot separated path (optional)\r\n * - math: boolean   If true (false by default), the math namespace is passed\r\n *                   as fifth argument of the factory function\r\n *\r\n * @param {*} object\r\n * @returns {boolean}\r\n */\n\nexport function isLegacyFactory(object) {\n  return object && typeof object.factory === 'function';\n}\n/**\r\n * Get a nested property from an object\r\n * @param {Object} object\r\n * @param {string | string[]} path\r\n * @returns {Object}\r\n */\n\nexport function get(object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'));\n    } else {\n      return object[path];\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    child = child ? child[key] : undefined;\n  }\n\n  return child;\n}\n/**\r\n * Set a nested property in an object\r\n * Mutates the object itself\r\n * If the path doesn't exist, it will be created\r\n * @param {Object} object\r\n * @param {string | string[]} path\r\n * @param {*} value\r\n * @returns {Object}\r\n */\n\nexport function set(object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value);\n    } else {\n      object[path] = value;\n      return object;\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    var key = path[i];\n\n    if (child[key] === undefined) {\n      child[key] = {};\n    }\n\n    child = child[key];\n  }\n\n  if (path.length > 0) {\n    var lastKey = path[path.length - 1];\n    child[lastKey] = value;\n  }\n\n  return object;\n}\n/**\r\n * Create an object composed of the picked object properties\r\n * @param {Object} object\r\n * @param {string[]} properties\r\n * @param {function} [transform] Optional value to transform a value when picking it\r\n * @return {Object}\r\n */\n\nexport function pick(object, properties, transform) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = get(object, key);\n\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value);\n    }\n  }\n\n  return copy;\n}\n/**\r\n * Shallow version of pick, creating an object composed of the picked object properties\r\n * but not for nested properties\r\n * @param {Object} object\r\n * @param {string[]} properties\r\n * @return {Object}\r\n */\n\nexport function pickShallow(object, properties) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = object[key];\n\n    if (value !== undefined) {\n      copy[key] = value;\n    }\n  }\n\n  return copy;\n}\nexport function values(object) {\n  return Object.keys(object).map(function (key) {\n    return object[key];\n  });\n} // helper function to test whether a string contains a path like 'user.name'\n\nfunction isPath(str) {\n  return str.indexOf('.') !== -1;\n}","map":{"version":3,"names":["isBigNumber","clone","x","type","undefined","Array","isArray","map","value","Date","valueOf","RegExp","TypeError","mapObject","object","callback","key","hasOwnProperty","extend","a","b","prop","deepExtend","Object","prototype","Function","constructor","deepStrictEqual","i","len","length","deepFlatten","nestedObject","flattenedObject","_deepFlatten","canDefineProperty","defineProperty","get","e","lazy","valueResolver","_uninitialized","_value","set","configurable","enumerable","traverse","path","split","obj","property","call","isLegacyFactory","factory","isPath","child","lastKey","pick","properties","transform","copy","pickShallow","values","keys","str","indexOf"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/utils/object.js"],"sourcesContent":["import { isBigNumber } from './is.js';\r\n/**\r\n * Clone an object\r\n *\r\n *     clone(x)\r\n *\r\n * Can clone any primitive type, array, and object.\r\n * If x has a function clone, this function will be invoked to clone the object.\r\n *\r\n * @param {*} x\r\n * @return {*} clone\r\n */\r\n\r\nexport function clone(x) {\r\n  var type = typeof x; // immutable primitive types\r\n\r\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\r\n    return x;\r\n  } // use clone function of the object when available\r\n\r\n\r\n  if (typeof x.clone === 'function') {\r\n    return x.clone();\r\n  } // array\r\n\r\n\r\n  if (Array.isArray(x)) {\r\n    return x.map(function (value) {\r\n      return clone(value);\r\n    });\r\n  }\r\n\r\n  if (x instanceof Date) return new Date(x.valueOf());\r\n  if (isBigNumber(x)) return x; // bignumbers are immutable\r\n\r\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\r\n  // object\r\n\r\n  return mapObject(x, clone);\r\n}\r\n/**\r\n * Apply map to all properties of an object\r\n * @param {Object} object\r\n * @param {function} callback\r\n * @return {Object} Returns a copy of the object with mapped properties\r\n */\r\n\r\nexport function mapObject(object, callback) {\r\n  var clone = {};\r\n\r\n  for (var key in object) {\r\n    if (hasOwnProperty(object, key)) {\r\n      clone[key] = callback(object[key]);\r\n    }\r\n  }\r\n\r\n  return clone;\r\n}\r\n/**\r\n * Extend object a with the properties of object b\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @return {Object} a\r\n */\r\n\r\nexport function extend(a, b) {\r\n  for (var prop in b) {\r\n    if (hasOwnProperty(b, prop)) {\r\n      a[prop] = b[prop];\r\n    }\r\n  }\r\n\r\n  return a;\r\n}\r\n/**\r\n * Deep extend an object a with the properties of object b\r\n * @param {Object} a\r\n * @param {Object} b\r\n * @returns {Object}\r\n */\r\n\r\nexport function deepExtend(a, b) {\r\n  // TODO: add support for Arrays to deepExtend\r\n  if (Array.isArray(b)) {\r\n    throw new TypeError('Arrays are not supported by deepExtend');\r\n  }\r\n\r\n  for (var prop in b) {\r\n    // We check against prop not being in Object.prototype or Function.prototype\r\n    // to prevent polluting for example Object.__proto__.\r\n    if (hasOwnProperty(b, prop) && !(prop in Object.prototype) && !(prop in Function.prototype)) {\r\n      if (b[prop] && b[prop].constructor === Object) {\r\n        if (a[prop] === undefined) {\r\n          a[prop] = {};\r\n        }\r\n\r\n        if (a[prop] && a[prop].constructor === Object) {\r\n          deepExtend(a[prop], b[prop]);\r\n        } else {\r\n          a[prop] = b[prop];\r\n        }\r\n      } else if (Array.isArray(b[prop])) {\r\n        throw new TypeError('Arrays are not supported by deepExtend');\r\n      } else {\r\n        a[prop] = b[prop];\r\n      }\r\n    }\r\n  }\r\n\r\n  return a;\r\n}\r\n/**\r\n * Deep test equality of all fields in two pairs of arrays or objects.\r\n * Compares values and functions strictly (ie. 2 is not the same as '2').\r\n * @param {Array | Object} a\r\n * @param {Array | Object} b\r\n * @returns {boolean}\r\n */\r\n\r\nexport function deepStrictEqual(a, b) {\r\n  var prop, i, len;\r\n\r\n  if (Array.isArray(a)) {\r\n    if (!Array.isArray(b)) {\r\n      return false;\r\n    }\r\n\r\n    if (a.length !== b.length) {\r\n      return false;\r\n    }\r\n\r\n    for (i = 0, len = a.length; i < len; i++) {\r\n      if (!deepStrictEqual(a[i], b[i])) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } else if (typeof a === 'function') {\r\n    return a === b;\r\n  } else if (a instanceof Object) {\r\n    if (Array.isArray(b) || !(b instanceof Object)) {\r\n      return false;\r\n    }\r\n\r\n    for (prop in a) {\r\n      // noinspection JSUnfilteredForInLoop\r\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    for (prop in b) {\r\n      // noinspection JSUnfilteredForInLoop\r\n      if (!(prop in a)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } else {\r\n    return a === b;\r\n  }\r\n}\r\n/**\r\n * Recursively flatten a nested object.\r\n * @param {Object} nestedObject\r\n * @return {Object} Returns the flattened object\r\n */\r\n\r\nexport function deepFlatten(nestedObject) {\r\n  var flattenedObject = {};\r\n\r\n  _deepFlatten(nestedObject, flattenedObject);\r\n\r\n  return flattenedObject;\r\n} // helper function used by deepFlatten\r\n\r\nfunction _deepFlatten(nestedObject, flattenedObject) {\r\n  for (var prop in nestedObject) {\r\n    if (hasOwnProperty(nestedObject, prop)) {\r\n      var value = nestedObject[prop];\r\n\r\n      if (typeof value === 'object' && value !== null) {\r\n        _deepFlatten(value, flattenedObject);\r\n      } else {\r\n        flattenedObject[prop] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * Test whether the current JavaScript engine supports Object.defineProperty\r\n * @returns {boolean} returns true if supported\r\n */\r\n\r\n\r\nexport function canDefineProperty() {\r\n  // test needed for broken IE8 implementation\r\n  try {\r\n    if (Object.defineProperty) {\r\n      Object.defineProperty({}, 'x', {\r\n        get: function get() {\r\n          return null;\r\n        }\r\n      });\r\n      return true;\r\n    }\r\n  } catch (e) {}\r\n\r\n  return false;\r\n}\r\n/**\r\n * Attach a lazy loading property to a constant.\r\n * The given function `fn` is called once when the property is first requested.\r\n *\r\n * @param {Object} object         Object where to add the property\r\n * @param {string} prop           Property name\r\n * @param {Function} valueResolver Function returning the property value. Called\r\n *                                without arguments.\r\n */\r\n\r\nexport function lazy(object, prop, valueResolver) {\r\n  var _uninitialized = true;\r\n\r\n  var _value;\r\n\r\n  Object.defineProperty(object, prop, {\r\n    get: function get() {\r\n      if (_uninitialized) {\r\n        _value = valueResolver();\r\n        _uninitialized = false;\r\n      }\r\n\r\n      return _value;\r\n    },\r\n    set: function set(value) {\r\n      _value = value;\r\n      _uninitialized = false;\r\n    },\r\n    configurable: true,\r\n    enumerable: true\r\n  });\r\n}\r\n/**\r\n * Traverse a path into an object.\r\n * When a namespace is missing, it will be created\r\n * @param {Object} object\r\n * @param {string | string[]} path   A dot separated string like 'name.space'\r\n * @return {Object} Returns the object at the end of the path\r\n */\r\n\r\nexport function traverse(object, path) {\r\n  if (path && typeof path === 'string') {\r\n    return traverse(object, path.split('.'));\r\n  }\r\n\r\n  var obj = object;\r\n\r\n  if (path) {\r\n    for (var i = 0; i < path.length; i++) {\r\n      var key = path[i];\r\n\r\n      if (!(key in obj)) {\r\n        obj[key] = {};\r\n      }\r\n\r\n      obj = obj[key];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n/**\r\n * A safe hasOwnProperty\r\n * @param {Object} object\r\n * @param {string} property\r\n */\r\n\r\nexport function hasOwnProperty(object, property) {\r\n  return object && Object.hasOwnProperty.call(object, property);\r\n}\r\n/**\r\n * Test whether an object is a factory. a factory has fields:\r\n *\r\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\r\n * - name: string (optional)\r\n * - path: string    A dot separated path (optional)\r\n * - math: boolean   If true (false by default), the math namespace is passed\r\n *                   as fifth argument of the factory function\r\n *\r\n * @param {*} object\r\n * @returns {boolean}\r\n */\r\n\r\nexport function isLegacyFactory(object) {\r\n  return object && typeof object.factory === 'function';\r\n}\r\n/**\r\n * Get a nested property from an object\r\n * @param {Object} object\r\n * @param {string | string[]} path\r\n * @returns {Object}\r\n */\r\n\r\nexport function get(object, path) {\r\n  if (typeof path === 'string') {\r\n    if (isPath(path)) {\r\n      return get(object, path.split('.'));\r\n    } else {\r\n      return object[path];\r\n    }\r\n  }\r\n\r\n  var child = object;\r\n\r\n  for (var i = 0; i < path.length; i++) {\r\n    var key = path[i];\r\n    child = child ? child[key] : undefined;\r\n  }\r\n\r\n  return child;\r\n}\r\n/**\r\n * Set a nested property in an object\r\n * Mutates the object itself\r\n * If the path doesn't exist, it will be created\r\n * @param {Object} object\r\n * @param {string | string[]} path\r\n * @param {*} value\r\n * @returns {Object}\r\n */\r\n\r\nexport function set(object, path, value) {\r\n  if (typeof path === 'string') {\r\n    if (isPath(path)) {\r\n      return set(object, path.split('.'), value);\r\n    } else {\r\n      object[path] = value;\r\n      return object;\r\n    }\r\n  }\r\n\r\n  var child = object;\r\n\r\n  for (var i = 0; i < path.length - 1; i++) {\r\n    var key = path[i];\r\n\r\n    if (child[key] === undefined) {\r\n      child[key] = {};\r\n    }\r\n\r\n    child = child[key];\r\n  }\r\n\r\n  if (path.length > 0) {\r\n    var lastKey = path[path.length - 1];\r\n    child[lastKey] = value;\r\n  }\r\n\r\n  return object;\r\n}\r\n/**\r\n * Create an object composed of the picked object properties\r\n * @param {Object} object\r\n * @param {string[]} properties\r\n * @param {function} [transform] Optional value to transform a value when picking it\r\n * @return {Object}\r\n */\r\n\r\nexport function pick(object, properties, transform) {\r\n  var copy = {};\r\n\r\n  for (var i = 0; i < properties.length; i++) {\r\n    var key = properties[i];\r\n    var value = get(object, key);\r\n\r\n    if (value !== undefined) {\r\n      set(copy, key, transform ? transform(value, key) : value);\r\n    }\r\n  }\r\n\r\n  return copy;\r\n}\r\n/**\r\n * Shallow version of pick, creating an object composed of the picked object properties\r\n * but not for nested properties\r\n * @param {Object} object\r\n * @param {string[]} properties\r\n * @return {Object}\r\n */\r\n\r\nexport function pickShallow(object, properties) {\r\n  var copy = {};\r\n\r\n  for (var i = 0; i < properties.length; i++) {\r\n    var key = properties[i];\r\n    var value = object[key];\r\n\r\n    if (value !== undefined) {\r\n      copy[key] = value;\r\n    }\r\n  }\r\n\r\n  return copy;\r\n}\r\nexport function values(object) {\r\n  return Object.keys(object).map(key => object[key]);\r\n} // helper function to test whether a string contains a path like 'user.name'\r\n\r\nfunction isPath(str) {\r\n  return str.indexOf('.') !== -1;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}