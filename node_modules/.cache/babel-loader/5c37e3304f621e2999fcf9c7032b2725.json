{"ast":null,"code":"import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'algorithm01';\nvar dependencies = ['typed'];\nexport var createAlgorithm01 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\r\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\r\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\r\n   *\r\n   *\r\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\r\n   * C(i,j) = ┤\r\n   *          └  Dij          ; otherwise\r\n   *\r\n   *\r\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\r\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\r\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\r\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\r\n   *\r\n   * @return {Matrix}                    DenseMatrix (C)\r\n   *\r\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\r\n   */\n\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // process data types\n\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\n\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\n\n    var i, j; // result (DenseMatrix)\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\n\n        w[i] = mark;\n      } // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","map":{"version":3,"names":["factory","DimensionError","name","dependencies","createAlgorithm01","_ref","typed","algorithm1","denseMatrix","sparseMatrix","callback","inverse","adata","_data","asize","_size","adt","_datatype","bvalues","_values","bindex","_index","bptr","_ptr","bsize","bdt","length","RangeError","Error","rows","columns","dt","undefined","cf","find","i","j","cdata","x","w","mark","k0","k1","k","createDenseMatrix","data","size","datatype"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js"],"sourcesContent":["import { factory } from '../../../utils/factory.js';\r\nimport { DimensionError } from '../../../error/DimensionError.js';\r\nvar name = 'algorithm01';\r\nvar dependencies = ['typed'];\r\nexport var createAlgorithm01 = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\r\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\r\n   *\r\n   *\r\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\r\n   * C(i,j) = ┤\r\n   *          └  Dij          ; otherwise\r\n   *\r\n   *\r\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\r\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\r\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\r\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\r\n   *\r\n   * @return {Matrix}                    DenseMatrix (C)\r\n   *\r\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\r\n   */\r\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\r\n    // dense matrix arrays\r\n    var adata = denseMatrix._data;\r\n    var asize = denseMatrix._size;\r\n    var adt = denseMatrix._datatype; // sparse matrix arrays\r\n\r\n    var bvalues = sparseMatrix._values;\r\n    var bindex = sparseMatrix._index;\r\n    var bptr = sparseMatrix._ptr;\r\n    var bsize = sparseMatrix._size;\r\n    var bdt = sparseMatrix._datatype; // validate dimensions\r\n\r\n    if (asize.length !== bsize.length) {\r\n      throw new DimensionError(asize.length, bsize.length);\r\n    } // check rows & columns\r\n\r\n\r\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\r\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\r\n    } // sparse matrix cannot be a Pattern matrix\r\n\r\n\r\n    if (!bvalues) {\r\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\r\n    } // rows & columns\r\n\r\n\r\n    var rows = asize[0];\r\n    var columns = asize[1]; // process data types\r\n\r\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\r\n\r\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\r\n\r\n    var i, j; // result (DenseMatrix)\r\n\r\n    var cdata = []; // initialize c\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      cdata[i] = [];\r\n    } // workspace\r\n\r\n\r\n    var x = []; // marks indicating we have a value in x for a given column\r\n\r\n    var w = []; // loop columns in b\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      // column mark\r\n      var mark = j + 1; // values in column j\r\n\r\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\r\n        // row\r\n        i = bindex[k]; // update workspace\r\n\r\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\r\n\r\n        w[i] = mark;\r\n      } // loop rows\r\n\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        // check row is in workspace\r\n        if (w[i] === mark) {\r\n          // c[i][j] was already calculated\r\n          cdata[i][j] = x[i];\r\n        } else {\r\n          // item does not exist in S\r\n          cdata[i][j] = adata[i][j];\r\n        }\r\n      }\r\n    } // return dense matrix\r\n\r\n\r\n    return denseMatrix.createDenseMatrix({\r\n      data: cdata,\r\n      size: [rows, columns],\r\n      datatype: dt\r\n    });\r\n  };\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}