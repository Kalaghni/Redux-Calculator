{"ast":null,"code":"import { deepMap } from '../../utils/collection.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'isNumeric';\nvar dependencies = ['typed'];\nexport var createIsNumeric = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\r\n   * Test whether a value is an numeric value.\r\n   *\r\n   * The function is evaluated element-wise in case of Array or Matrix input.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *     math.isNumeric(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.isNumeric(2)                     // returns true\r\n   *    math.isNumeric('2')                   // returns false\r\n   *    math.hasNumericValue('2')             // returns true\r\n   *    math.isNumeric(0)                     // returns true\r\n   *    math.isNumeric(math.bignumber(500))   // returns true\r\n   *    math.isNumeric(math.fraction(4))      // returns true\r\n   *    math.isNumeric(math.complex('2-4i')   // returns false\r\n   *    math.isNumeric([2.3, 'foo', false])   // returns [true, false, true]\r\n   *\r\n   * See also:\r\n   *\r\n   *    isZero, isPositive, isNegative, isInteger, hasNumericValue\r\n   *\r\n   * @param {*} x       Value to be tested\r\n   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,\r\n   *                    `Fraction`, or `boolean`. Returns false for other types.\r\n   *                    Throws an error in case of unknown types.\r\n   */\n\n  return typed(name, {\n    'number | BigNumber | Fraction | boolean': function numberBigNumberFractionBoolean() {\n      return true;\n    },\n    'Complex | Unit | string | null | undefined | Node': function ComplexUnitStringNullUndefinedNode() {\n      return false;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","map":{"version":3,"names":["deepMap","factory","name","dependencies","createIsNumeric","_ref","typed","numberBigNumberFractionBoolean","ComplexUnitStringNullUndefinedNode","ArrayMatrix","x"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/function/utils/isNumeric.js"],"sourcesContent":["import { deepMap } from '../../utils/collection.js';\r\nimport { factory } from '../../utils/factory.js';\r\nvar name = 'isNumeric';\r\nvar dependencies = ['typed'];\r\nexport var createIsNumeric = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Test whether a value is an numeric value.\r\n   *\r\n   * The function is evaluated element-wise in case of Array or Matrix input.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *     math.isNumeric(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.isNumeric(2)                     // returns true\r\n   *    math.isNumeric('2')                   // returns false\r\n   *    math.hasNumericValue('2')             // returns true\r\n   *    math.isNumeric(0)                     // returns true\r\n   *    math.isNumeric(math.bignumber(500))   // returns true\r\n   *    math.isNumeric(math.fraction(4))      // returns true\r\n   *    math.isNumeric(math.complex('2-4i')   // returns false\r\n   *    math.isNumeric([2.3, 'foo', false])   // returns [true, false, true]\r\n   *\r\n   * See also:\r\n   *\r\n   *    isZero, isPositive, isNegative, isInteger, hasNumericValue\r\n   *\r\n   * @param {*} x       Value to be tested\r\n   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,\r\n   *                    `Fraction`, or `boolean`. Returns false for other types.\r\n   *                    Throws an error in case of unknown types.\r\n   */\r\n  return typed(name, {\r\n    'number | BigNumber | Fraction | boolean': function numberBigNumberFractionBoolean() {\r\n      return true;\r\n    },\r\n    'Complex | Unit | string | null | undefined | Node': function ComplexUnitStringNullUndefinedNode() {\r\n      return false;\r\n    },\r\n    'Array | Matrix': function ArrayMatrix(x) {\r\n      return deepMap(x, this);\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,eAAe,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EAC9E,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOA,KAAK,CAACJ,IAAD,EAAO;IACjB,2CAA2C,SAASK,8BAAT,GAA0C;MACnF,OAAO,IAAP;IACD,CAHgB;IAIjB,qDAAqD,SAASC,kCAAT,GAA8C;MACjG,OAAO,KAAP;IACD,CANgB;IAOjB,kBAAkB,SAASC,WAAT,CAAqBC,CAArB,EAAwB;MACxC,OAAOV,OAAO,CAACU,CAAD,EAAI,IAAJ,CAAd;IACD;EATgB,CAAP,CAAZ;AAWD,CA7CkD,CAA5C"},"metadata":{},"sourceType":"module"}