{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createDiff } from '../../function/matrix/diff.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'diff';\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\nexport var createDiffTransform = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      subtract = _ref.subtract,\n      number = _ref.number,\n      bignumber = _ref.bignumber;\n  var diff = createDiff({\n    typed: typed,\n    matrix: matrix,\n    subtract: subtract,\n    number: number,\n    bignumber: bignumber\n  });\n  /**\r\n   * Attach a transform function to math.diff\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\n\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return diff.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createDiff","lastDimToZeroBase","name","dependencies","createDiffTransform","_ref","typed","matrix","subtract","number","bignumber","diff","any","args","apply","err","isTransformFunction"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/expression/transform/diff.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { createDiff } from '../../function/matrix/diff.js';\r\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\r\nvar name = 'diff';\r\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\r\nexport var createDiffTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    matrix,\r\n    subtract,\r\n    number,\r\n    bignumber\r\n  } = _ref;\r\n  var diff = createDiff({\r\n    typed,\r\n    matrix,\r\n    subtract,\r\n    number,\r\n    bignumber\r\n  });\r\n  /**\r\n   * Attach a transform function to math.diff\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\r\n\r\n  return typed(name, {\r\n    '...any': function any(args) {\r\n      args = lastDimToZeroBase(args);\r\n\r\n      try {\r\n        return diff.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,QAAhC,EAA0C,WAA1C,CAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EAClF,IACEC,KADF,GAMID,IANJ,CACEC,KADF;EAAA,IAEEC,MAFF,GAMIF,IANJ,CAEEE,MAFF;EAAA,IAGEC,QAHF,GAMIH,IANJ,CAGEG,QAHF;EAAA,IAIEC,MAJF,GAMIJ,IANJ,CAIEI,MAJF;EAAA,IAKEC,SALF,GAMIL,IANJ,CAKEK,SALF;EAOA,IAAIC,IAAI,GAAGX,UAAU,CAAC;IACpBM,KAAK,EAALA,KADoB;IAEpBC,MAAM,EAANA,MAFoB;IAGpBC,QAAQ,EAARA,QAHoB;IAIpBC,MAAM,EAANA,MAJoB;IAKpBC,SAAS,EAATA;EALoB,CAAD,CAArB;EAOA;AACF;AACA;AACA;AACA;AACA;;EAEE,OAAOJ,KAAK,CAACJ,IAAD,EAAO;IACjB,UAAU,SAASU,GAAT,CAAaC,IAAb,EAAmB;MAC3BA,IAAI,GAAGZ,iBAAiB,CAACY,IAAD,CAAxB;;MAEA,IAAI;QACF,OAAOF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAAP;MACD,CAFD,CAEE,OAAOE,GAAP,EAAY;QACZ,MAAMhB,cAAc,CAACgB,GAAD,CAApB;MACD;IACF;EATgB,CAAP,CAAZ;AAWD,CAjCsD,EAiCpD;EACDC,mBAAmB,EAAE;AADpB,CAjCoD,CAAhD"},"metadata":{},"sourceType":"module"}