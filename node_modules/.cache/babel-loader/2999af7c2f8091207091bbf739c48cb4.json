{"ast":null,"code":"import { deepMap } from '../../utils/collection.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'factorial';\nvar dependencies = ['typed', 'gamma'];\nexport var createFactorial = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      gamma = _ref.gamma;\n  /**\r\n   * Compute the factorial of a value\r\n   *\r\n   * Factorial only supports an integer value as argument.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.factorial(n)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.factorial(5)    // returns 120\r\n   *    math.factorial(3)    // returns 6\r\n   *\r\n   * See also:\r\n   *\r\n   *    combinations, combinationsWithRep, gamma, permutations\r\n   *\r\n   * @param {number | BigNumber | Array | Matrix} n   An integer number\r\n   * @return {number | BigNumber | Array | Matrix}    The factorial of `n`\r\n   */\n\n  return typed(name, {\n    number: function number(n) {\n      if (n < 0) {\n        throw new Error('Value must be non-negative');\n      }\n\n      return gamma(n + 1);\n    },\n    BigNumber: function BigNumber(n) {\n      if (n.isNegative()) {\n        throw new Error('Value must be non-negative');\n      }\n\n      return gamma(n.plus(1));\n    },\n    'Array | Matrix': function ArrayMatrix(n) {\n      return deepMap(n, this);\n    }\n  });\n});","map":{"version":3,"names":["deepMap","factory","name","dependencies","createFactorial","_ref","typed","gamma","number","n","Error","BigNumber","isNegative","plus","ArrayMatrix"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/function/probability/factorial.js"],"sourcesContent":["import { deepMap } from '../../utils/collection.js';\r\nimport { factory } from '../../utils/factory.js';\r\nvar name = 'factorial';\r\nvar dependencies = ['typed', 'gamma'];\r\nexport var createFactorial = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    gamma\r\n  } = _ref;\r\n\r\n  /**\r\n   * Compute the factorial of a value\r\n   *\r\n   * Factorial only supports an integer value as argument.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.factorial(n)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.factorial(5)    // returns 120\r\n   *    math.factorial(3)    // returns 6\r\n   *\r\n   * See also:\r\n   *\r\n   *    combinations, combinationsWithRep, gamma, permutations\r\n   *\r\n   * @param {number | BigNumber | Array | Matrix} n   An integer number\r\n   * @return {number | BigNumber | Array | Matrix}    The factorial of `n`\r\n   */\r\n  return typed(name, {\r\n    number: function number(n) {\r\n      if (n < 0) {\r\n        throw new Error('Value must be non-negative');\r\n      }\r\n\r\n      return gamma(n + 1);\r\n    },\r\n    BigNumber: function BigNumber(n) {\r\n      if (n.isNegative()) {\r\n        throw new Error('Value must be non-negative');\r\n      }\r\n\r\n      return gamma(n.plus(1));\r\n    },\r\n    'Array | Matrix': function ArrayMatrix(n) {\r\n      return deepMap(n, this);\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,OAAV,CAAnB;AACA,OAAO,IAAIC,eAAe,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EAC9E,IACEC,KADF,GAGID,IAHJ,CACEC,KADF;EAAA,IAEEC,KAFF,GAGIF,IAHJ,CAEEE,KAFF;EAKA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOD,KAAK,CAACJ,IAAD,EAAO;IACjBM,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;MACzB,IAAIA,CAAC,GAAG,CAAR,EAAW;QACT,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;MACD;;MAED,OAAOH,KAAK,CAACE,CAAC,GAAG,CAAL,CAAZ;IACD,CAPgB;IAQjBE,SAAS,EAAE,SAASA,SAAT,CAAmBF,CAAnB,EAAsB;MAC/B,IAAIA,CAAC,CAACG,UAAF,EAAJ,EAAoB;QAClB,MAAM,IAAIF,KAAJ,CAAU,4BAAV,CAAN;MACD;;MAED,OAAOH,KAAK,CAACE,CAAC,CAACI,IAAF,CAAO,CAAP,CAAD,CAAZ;IACD,CAdgB;IAejB,kBAAkB,SAASC,WAAT,CAAqBL,CAArB,EAAwB;MACxC,OAAOT,OAAO,CAACS,CAAD,EAAI,IAAJ,CAAd;IACD;EAjBgB,CAAP,CAAZ;AAmBD,CA/CkD,CAA5C"},"metadata":{},"sourceType":"module"}