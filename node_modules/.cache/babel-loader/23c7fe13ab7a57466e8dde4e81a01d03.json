{"ast":null,"code":"export var setSizeDocs = {\n  name: 'setSize',\n  category: 'Set',\n  syntax: ['setSize(set)', 'setSize(set, unique)'],\n  description: 'Count the number of elements of a (multi)set. When the second parameter \"unique\" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  examples: ['setSize([1, 2, 2, 4])', 'setSize([1, 2, 2, 4], true)'],\n  seealso: ['setUnion', 'setIntersect', 'setDifference']\n};","map":{"version":3,"names":["setSizeDocs","name","category","syntax","description","examples","seealso"],"sources":["C:/laragon/www/testsite.thewateringcan/wp-content/plugins/Redux-Calculator/node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setSize.js"],"sourcesContent":["export var setSizeDocs = {\r\n  name: 'setSize',\r\n  category: 'Set',\r\n  syntax: ['setSize(set)', 'setSize(set, unique)'],\r\n  description: 'Count the number of elements of a (multi)set. When the second parameter \"unique\" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',\r\n  examples: ['setSize([1, 2, 2, 4])', 'setSize([1, 2, 2, 4], true)'],\r\n  seealso: ['setUnion', 'setIntersect', 'setDifference']\r\n};"],"mappings":"AAAA,OAAO,IAAIA,WAAW,GAAG;EACvBC,IAAI,EAAE,SADiB;EAEvBC,QAAQ,EAAE,KAFa;EAGvBC,MAAM,EAAE,CAAC,cAAD,EAAiB,sBAAjB,CAHe;EAIvBC,WAAW,EAAE,qNAJU;EAKvBC,QAAQ,EAAE,CAAC,uBAAD,EAA0B,6BAA1B,CALa;EAMvBC,OAAO,EAAE,CAAC,UAAD,EAAa,cAAb,EAA6B,eAA7B;AANc,CAAlB"},"metadata":{},"sourceType":"module"}